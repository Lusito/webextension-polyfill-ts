{
  "functions.%getSecurityInfo.!fixAsync": "info:SecurityInfo",
  "events.%onAuthRequired.parameters.%details.properties.initiator": {
    "type": "string",
    "optional": true,
    "description": "URL of the resource that triggered this request (on chrome)."
  },
  "events.%onBeforeRedirect.parameters.%details.properties.initiator": {
    "type": "string",
    "optional": true,
    "description": "URL of the resource that triggered this request (on chrome)."
  },
  "events.%onBeforeRequest.parameters.%details.properties.initiator": {
    "type": "string",
    "optional": true,
    "description": "URL of the resource that triggered this request (on chrome)."
  },
  "events.%onBeforeSendHeaders.parameters.%details.properties.initiator": {
    "type": "string",
    "optional": true,
    "description": "URL of the resource that triggered this request (on chrome)."
  },
  "events.%onCompleted.parameters.%details.properties.initiator": {
    "type": "string",
    "optional": true,
    "description": "URL of the resource that triggered this request (on chrome)."
  },
  "events.%onErrorOccurred.parameters.%details.properties.initiator": {
    "type": "string",
    "optional": true,
    "description": "URL of the resource that triggered this request (on chrome)."
  },
  "events.%onHeadersReceived.parameters.%details.properties.initiator": {
    "type": "string",
    "optional": true,
    "description": "URL of the resource that triggered this request (on chrome)."
  },
  "events.%onSendHeaders.parameters.%details.properties.initiator": {
    "type": "string",
    "optional": true,
    "description": "URL of the resource that triggered this request (on chrome)."
  },
  "events.%onResponseStarted.parameters.%details.properties.initiator": {
    "type": "string",
    "optional": true,
    "description": "URL of the resource that triggered this request (on chrome)."
  },
  "events.%onBeforeRequest.returns.$ref": "BlockingResponseOrPromiseOrVoid",
  "events.%onBeforeSendHeaders.returns.$ref": "BlockingResponseOrPromiseOrVoid",
  "events.%onHeadersReceived.returns.$ref": "BlockingResponseOrPromiseOrVoid",
  "events.%onAuthRequired.returns.$ref": "BlockingResponseOrPromiseOrVoid",
  "events.%onBeforeRequest.returns.optional": false,
  "events.%onBeforeSendHeaders.returns.optional": false,
  "events.%onHeadersReceived.returns.optional": false,
  "events.%onAuthRequired.returns.optional": false,
  "events.%onAuthRequired.parameters.-[]": ["%asyncCallback"],
  "events.%onErrorOccurred.extraParameters.+[]": [
    {
      "type": "array",
      "optional": true,
      "name": "extraInfoSpec",
      "description": "Array of extra information that should be passed to the listener function.",
      "items": {
        "$ref": "OnErrorOccurredOptions"
      }
    }
  ],
  "types.$OnBeforeRequestOptions.enum.+[]": ["extraHeaders"],
  "types.$OnBeforeSendHeadersOptions.enum.+[]": ["extraHeaders"],
  "types.$OnSendHeadersOptions.enum.+[]": ["extraHeaders"],
  "types.$OnHeadersReceivedOptions.enum.+[]": ["extraHeaders"],
  "types.$OnAuthRequiredOptions.enum.+[]": ["extraHeaders"],
  "types.$OnResponseStartedOptions.enum.+[]": ["extraHeaders"],
  "types.$OnBeforeRedirectOptions.enum.+[]": ["extraHeaders"],
  "types.$OnCompletedOptions.enum.+[]": ["extraHeaders"],
  "types.+[]": [
    {
      "id": "OnErrorOccurredOptions",
      "type": "string",
      "enum": ["extraHeaders"]
    },
    {
      "type": "choices",
      "id": "BlockingResponseOrPromiseOrVoid",
      "description": "A BlockingResponse or a Promise<BlockingResponse>",
      "eslintDisableLine": "@typescript-eslint/no-invalid-void-type",
      "choices": [{ "type": "BlockingResponse" }, { "type": "Promise<BlockingResponse>" }, { "type": "void"}]
    },
    {
      "id": "StreamFilterStatus",
      "type": "string",
      "enum": [
        {
          "name": "uninitialized",
          "description": "The StreamFilter is not fully initialized. No methods may be called until a \"start\" event has been received."
        },
        {
          "name": "transferringdata",
          "description": "The underlying channel is currently transferring data, which will be dispatched via \"data\" events."
        },
        {
          "name": "finishedtransferringdata",
          "description": "The underlying channel has finished transferring data. Data may still be written via write() calls at this point."
        },
        {
          "name": "suspended",
          "description": "Data transfer is currently suspended. It may be resumed by a call to resume(). Data may still be written via write() calls in this state."
        },
        {
          "name": "closed",
          "description": "The channel has been closed by a call to close(). No further data wlil be delivered via \"data\" events, and no further data may be written via write() calls."
        },
        {
          "name": "disconnected",
          "description": "The channel has been disconnected by a call to disconnect(). All further data will be delivered directly, without passing through the filter. No further events will be dispatched, and no further data may be written by write() calls."
        },
        {
          "name": "failed",
          "description": "An error has occurred and the channel is disconnected. The `error`, property contains the details of the error."
        }
      ]
    },
    {
      "type": "object",
      "id": "StreamFilter",
      "description": "An interface which allows an extension to intercept, and optionally modify, response data from an HTTP request.",
      "functions": [
        {
          "type": "function",
          "name": "create",
          "description": "Creates a stream filter for the given add-on and the given extension ID.",
          "parameters": [
            {
              "name": "requestId",
              "type": "number"
            },
            {
              "name": "addonId",
              "type": "string"
            }
          ]
        },
        {
          "type": "function",
          "name": "suspend",
          "description": "Suspends processing of the request. After this is called, no further data will be delivered until the request is resumed."
        },
        {
          "type": "function",
          "name": "resume",
          "description": "Resumes delivery of data for a suspended request."
        },
        {
          "type": "function",
          "name": "close",
          "description": "Closes the request. After this is called, no more data may be written to the stream, and no further data will be delivered. This *must* be called after the consumer is finished writing data, unless disconnect() has already been called."
        },
        {
          "type": "function",
          "name": "disconnect",
          "description": "Disconnects the stream filter from the request. After this is called, no further data will be delivered to the filter, and any unprocessed data will be written directly to the output stream."
        },
        {
          "type": "function",
          "name": "write",
          "description": "Writes a chunk of data to the output stream. This may not be called before the \"start\" event has been received.",
          "parameters": [
            {
              "name": "data",
              "type": "choices",
              "choices": [
                {
                  "type": "object",
                  "isInstanceOf": "ArrayBuffer"
                },
                {
                  "type": "object",
                  "isInstanceOf": "Uint8Array"
                }
              ]
            }
          ]
        }
      ],
      "properties": {
        "status": {
          "description": "Returns the current status of the stream.",
          "type": "ref",
          "$ref": "StreamFilterStatus"
        },
        "error": {
          "description": "After an \"error\" event has been dispatched, this contains a message describing the error.",
          "type": "string"
        }
      },
      "events": [
        {
          "id": "ondata",
          "type": "function",
          "assignableEvent": true,
          "description": "Dispatched with a StreamFilterDataEvent whenever incoming data is available on the stream. This data will not be delivered to the output stream unless it is explicitly written via a write() call.",
          "parameters": [
            {
              "name": "data",
              "type": "ref",
              "$ref": "StreamFilterEventData"
            }
          ]
        },
        {
          "id": "onstart",
          "type": "function",
          "assignableEvent": true,
          "description": "Dispatched when the stream is opened, and is about to begin delivering data.",
          "parameters": [
            {
              "name": "data",
              "type": "ref",
              "$ref": "StreamFilterEventData"
            }
          ]
        },
        {
          "id": "onstop",
          "type": "function",
          "assignableEvent": true,
          "description": "Dispatched when the stream has closed, and has no more data to deliver. The output stream remains open and writable until close() is called.",
          "parameters": [
            {
              "name": "data",
              "type": "ref",
              "$ref": "StreamFilterEventData"
            }
          ]
        },
        {
          "id": "onerror",
          "type": "function",
          "assignableEvent": true,
          "description": "Dispatched when an error has occurred. No further data may be read or written after this point.",
          "parameters": [
            {
              "name": "data",
              "type": "ref",
              "$ref": "StreamFilterEventData"
            }
          ]
        }
      ]
    },
    {
      "type": "object",
      "id": "StreamFilterEventData",
      "properties": {
        "data": {
          "description": "Contains a chunk of data read from the input stream.",
          "type": "object",
          "isInstanceOf": "ArrayBuffer"
        }
      }
    }
  ]
}
